// <auto-generated />
using BookWeb.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookWeb.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240710230955_add_products1")]
    partial class add_products1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.5.24306.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookWeb.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            DisplayOrder = 10,
                            Name = "a"
                        },
                        new
                        {
                            CategoryId = 2,
                            DisplayOrder = 20,
                            Name = "b"
                        },
                        new
                        {
                            CategoryId = 3,
                            DisplayOrder = 30,
                            Name = "c"
                        });
                });

            modelBuilder.Entity("BookWeb.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<double>("PriceList")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Author = "Botza",
                            Description = "Dec1",
                            ISBN = "I1",
                            Price = 100.0,
                            Price100 = 85.0,
                            Price50 = 90.0,
                            PriceList = 95.0,
                            Title = "abc"
                        },
                        new
                        {
                            ProductId = 2,
                            Author = "John Doe",
                            Description = "Dec2",
                            ISBN = "I2",
                            Price = 150.0,
                            Price100 = 135.0,
                            Price50 = 140.0,
                            PriceList = 145.0,
                            Title = "xyz"
                        },
                        new
                        {
                            ProductId = 3,
                            Author = "Jane Smith",
                            Description = "Description for product 3",
                            ISBN = "I3",
                            Price = 120.0,
                            Price100 = 105.0,
                            Price50 = 110.0,
                            PriceList = 115.0,
                            Title = "Random Product 3"
                        },
                        new
                        {
                            ProductId = 4,
                            Author = "Emily Clark",
                            Description = "Description for product 4",
                            ISBN = "I4",
                            Price = 200.0,
                            Price100 = 170.0,
                            Price50 = 180.0,
                            PriceList = 190.0,
                            Title = "Random Product 4"
                        },
                        new
                        {
                            ProductId = 5,
                            Author = "Michael Brown",
                            Description = "Description for product 5",
                            ISBN = "I5",
                            Price = 175.0,
                            Price100 = 145.0,
                            Price50 = 155.0,
                            PriceList = 165.0,
                            Title = "Random Product 5"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
